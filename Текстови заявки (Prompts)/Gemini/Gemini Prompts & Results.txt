Prompt (1): Java Class Generation
- Write a Java class for a singly linked list with methods to insert an element at the end, delete an element by key, and print the list.



Prompt (2): Documentation Generation based on Generated Code
- Generate a comprehensive confluence-format documentation for the following Java code:
'''public class SinglyLinkedList {

  // Node class to represent a single element in the list
  private static class Node {
    int data;
    Node next;

    public Node(int data) {
      this.data = data;
      this.next = null;
    }
  }

  // Head of the linked list
  private Node head;

  // Insert a new element at the end of the list
  public void insert(int data) {
    Node newNode = new Node(data);
    if (head == null) {
      head = newNode;
      return;
    }
    Node current = head;
    while (current.next != null) {
      current = current.next;
    }
    current.next = newNode;
  }

  // Delete a node by its data value (key)
  public void deleteByKey(int key) {
    if (head == null) {
      return;
    }
    // Handle deletion of head node
    if (head.data == key) {
      head = head.next;
      return;
    }
    Node current = head;
    Node previous = null;
    while (current != null && current.data != key) {
      previous = current;
      current = current.next;
    }
    // If key not found
    if (current == null) {
      return;
    }
    // Update previous node to point to the node after the deleted one
    previous.next = current.next;
  }

  // Print the contents of the list
  public void printList() {
    Node current = head;
    while (current != null) {
      System.out.print(current.data + " -> ");
      current = current.next;
    }
    System.out.println("NULL");
  }
}'''
